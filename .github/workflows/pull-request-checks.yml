name: Pull Request Checks
on:
    pull_request:
        branches: [main]
env:
    NPM_AUTH: ${{ secrets.ARTIFACTORY_NPM_AUTH }}
    NPM_EMAIL: ${{ secrets.ARTIFACTORY_NPM_EMAIL }}
    REALM_API_URL: ${{ secrets.REALM_API_URL }}
    REALM_SEARCH_URL: ${{ secrets.REALM_SEARCH_URL }}
    STRAPI_URL: ${{ secrets.STRAPI_DEV_URL }}
    DEVHUB_URL: ${{ secrets.DEVHUB_URL }}
jobs:
    check-formatting-and-lint:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout target branch
              uses: actions/checkout@v2
            - name: Use Node 16.x
              uses: actions/setup-node@v2
              with:
                  node-version: '16.x'
            - name: Cache node modules
              uses: actions/cache@v2
              id: cache
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-node-
            - name: Install dependencies
              if: steps.cache.outputs.cache-hit != 'true'
              run: yarn install --frozen-lockfile
            - name: Run Prettier
              run: yarn format:check
            - name: Lint
              run: yarn lint
    playwright-tests:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout target branch
              uses: actions/checkout@v2
            - name: Use Node 16.x
              uses: actions/setup-node@v2
              with:
                  node-version: '16.x'
            - name: Cache node modules
              uses: actions/cache@v2
              id: cache
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-node-
            - name: Install dependencies
              if: steps.cache.outputs.cache-hit != 'true'
              run: yarn install --frozen-lockfile
            - name: Install Playwright
              if: steps.cache.outputs.cache-hit == 'true'
              run: ./node_modules/.bin/playwright install
            - name: Build
              run: yarn build
            - name: Run Playwright
              run: yarn test:e2e
            - name: Upload test results
              if: ${{ failure() }}
              uses: actions/upload-artifact@v2
              with:
                  name: playwright-artifacts
                  path: playwright-artifacts
    jest-tests:
        runs-on: ubuntu-latest
        permissions:
            checks: write
            pull-requests: write
            contents: read
        steps:
            - name: Checkout target branch
              uses: actions/checkout@v2
            - name: Use Node 16.x
              uses: actions/setup-node@v2
              with:
                  node-version: '16.x'
            - name: Cache node modules
              uses: actions/cache@v2
              id: cache
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-node-
            - name: Install dependencies
              if: steps.cache.outputs.cache-hit != 'true'
              run: yarn install --frozen-lockfile
            - name: Run Jest tests with coverage report
              with:
                  skip-step: install
              uses: ArtiomTr/jest-coverage-report-action@v2
    lighthouse:
        name: Lighthouse
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
              with:
                  ref: ${{ github.event.pull_request.head.sha }}
            - name: Use Node.js 16.x
              uses: actions/setup-node@v1
              with:
                  node-version: 16.x
            - name: Cache node modules
              uses: actions/cache@v2
              id: cache
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-node-
            - name: Install dependencies
              if: steps.cache.outputs.cache-hit != 'true'
              run: yarn install --frozen-lockfile
            - name: yarn build
              run: yarn run build
              env:
                  HOST_URL: localhost:3000
            - name: Install Lighthouse
              run: yarn global add @lhci/cli@0.8.x
            - name: Run Lighthouse
              run: lhci autorun
              env:
                  LHCI_GITHUB_APP_TOKEN: ${{secrets.LIGHTHOUSE_CI_TOKEN}}
    deploy-stage-vercel:
        name: Vercel Staging
        runs-on: ubuntu-latest
        steps:
            - name: Checkout target branch
              uses: actions/checkout@v2
            - name: Use Node 16.x
              uses: actions/setup-node@v2
              with:
                  node-version: '16.x'
            - name: Deploy to staging
              uses: amondnet/vercel-action@v20
              with:
                  github-token: ${{secrets.GITHUB_TOKEN}}
                  vercel-token: ${{secrets.VERCEL_TOKEN}}
                  vercel-org-id: ${{secrets.VERCEL_ORG_ID}}
                  vercel-project-id: ${{secrets.VERCEL_PROJECT_ID}}
                  vercel-args: '--build-env NPM_AUTH=${{ secrets.ARTIFACTORY_NPM_AUTH }} --build-env NPM_EMAIL=${{ secrets.ARTIFACTORY_NPM_EMAIL }} --build-env STRAPI_URL=${{ secrets.STRAPI_DEV_URL }} --build-env DEVHUB_URL=${{ secrets.DEVHUB_URL }} --build-env REALM_API_URL=${{ secrets.REALM_API_URL }} --build-env REALM_SEARCH_URL=${{ secrets.REALM_SEARCH_URL }}'
                  scope: ${{secrets.VERCEL_ORG_ID}}
