# ---
# kind: pipeline
# type: kubernetes
# name: pull-request-checks

# trigger:
#   branch:
#     - main
#   event:
#     exclude:
#       - tag
#     include:
#       - pull_request
# steps:
#   - name: build
#     image: ubuntu:focal
#     commands:
#     - apt-get -y update
#     - apt-get -y install --no-install-recommends ca-certificates curl
#     - curl -sL https://deb.nodesource.com/setup_16.x | bash
#     - apt-get -y install --no-install-recommends nodejs
#     - npm install --global yarn
#     - yarn install --frozen-lockfile
#     - yarn build
#     resources:
#       limits:
#         memory: 18Gi
#     environment:
#       ACCOUNT_PORTAL_URL: https://account-qa.mongodb.com
#       APP_ENV: staging
#       HOST_URL: mongodbcom-cdn.staging.corp.mongodb.com
#       NPM_AUTH:
#         from_secret: NPM_AUTH
#       NPM_EMAIL:
#         from_secret: NPM_EMAIL
#       REALM_API_URL:
#         from_secret: REALM_API_URL
#       REALM_SEARCH_URL:
#         from_secret: REALM_SEARCH_URL_STAGING
#       STRAPI_URL:
#         from_secret: STRAPI_URL_STAGING
#       STRAPI_API_TOKEN:
#         from_secret: STRAPI_API_TOKEN
#       CS_BRANCH:
#         from_secret: CS_BRANCH
#       CS_DELIVERY_TOKEN:
#         from_secret: CS_DELIVERY_TOKEN
#       CS_GRAPHQL_URL:
#         from_secret: CS_GRAPHQL_URL
#       SENTRY_AUTH_TOKEN:
#         from_secret: SENTRY_AUTH_TOKEN
#       SENTRY_DSN:
#         from_secret: SENTRY_DSN
#       NEXT_IMAGE_HOSTS:
#         from_secret: NEXT_IMAGE_HOSTS
#       MONGODB_TV_API_KEY:
#         from_secret: MONGODB_TV_API_KEY
#       DEBIAN_FRONTEND: noninteractive
#   - name: unit-tests
#     image: ubuntu:focal
#     commands:
#     - apt-get -y update
#     - apt-get -y install --no-install-recommends ca-certificates curl
#     - curl -sL https://deb.nodesource.com/setup_16.x | bash
#     - apt-get -y install --no-install-recommends nodejs
#     - npx jest
#     resources:
#       limits:
#         memory: 18Gi
#     environment:
#       ACCOUNT_PORTAL_URL: https://account-qa.mongodb.com
#       APP_ENV: staging
#       HOST_URL: mongodbcom-cdn.staging.corp.mongodb.com
#       NPM_AUTH:
#         from_secret: NPM_AUTH
#       NPM_EMAIL:
#         from_secret: NPM_EMAIL
#       REALM_API_URL:
#         from_secret: REALM_API_URL
#       REALM_SEARCH_URL:
#         from_secret: REALM_SEARCH_URL_STAGING
#       STRAPI_URL:
#         from_secret: STRAPI_URL_STAGING
#       STRAPI_API_TOKEN:
#         from_secret: STRAPI_API_TOKEN
#       CS_BRANCH:
#         from_secret: CS_BRANCH
#       CS_DELIVERY_TOKEN:
#         from_secret: CS_DELIVERY_TOKEN
#       CS_GRAPHQL_URL:
#         from_secret: CS_GRAPHQL_URL
#       SENTRY_AUTH_TOKEN:
#         from_secret: SENTRY_AUTH_TOKEN
#       SENTRY_DSN:
#         from_secret: SENTRY_DSN
#       NEXT_IMAGE_HOSTS:
#         from_secret: NEXT_IMAGE_HOSTS
#       MONGODB_TV_API_KEY:
#         from_secret: MONGODB_TV_API_KEY
#       DEBIAN_FRONTEND: noninteractive
#   - name: lighthouse
#     image: ubuntu:focal
#     commands:
#     - apt-get -y update
#     - apt-get -y install --no-install-recommends ca-certificates curl wget
#     - curl -sL https://deb.nodesource.com/setup_16.x | bash
#     - apt-get -y install --no-install-recommends nodejs
#     - npm install --global yarn
#     - yarn install --frozen-lockfile
#     - yarn build
#     - wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
#     # - ./node_modules/.bin/playwright install # Easiest way to install Chrome.
#     - yarn global add @lhci/cli@0.8.x
#     - lhci autorun
#     resources:
#       limits:
#         memory: 18Gi
#     environment:
#       ACCOUNT_PORTAL_URL: https://account-qa.mongodb.com
#       APP_ENV: staging
#       HOST_URL: mongodbcom-cdn.staging.corp.mongodb.com
#       NPM_AUTH:
#         from_secret: NPM_AUTH
#       NPM_EMAIL:
#         from_secret: NPM_EMAIL
#       REALM_API_URL:
#         from_secret: REALM_API_URL
#       REALM_SEARCH_URL:
#         from_secret: REALM_SEARCH_URL_STAGING
#       STRAPI_URL:
#         from_secret: STRAPI_URL_STAGING
#       STRAPI_API_TOKEN:
#         from_secret: STRAPI_API_TOKEN
#       CS_BRANCH:
#         from_secret: CS_BRANCH
#       CS_DELIVERY_TOKEN:
#         from_secret: CS_DELIVERY_TOKEN
#       CS_GRAPHQL_URL:
#         from_secret: CS_GRAPHQL_URL
#       SENTRY_AUTH_TOKEN:
#         from_secret: SENTRY_AUTH_TOKEN
#       SENTRY_DSN:
#         from_secret: SENTRY_DSN
#       NEXT_IMAGE_HOSTS:
#         from_secret: NEXT_IMAGE_HOSTS
#       MONGODB_TV_API_KEY:
#         from_secret: MONGODB_TV_API_KEY
#       DEBIAN_FRONTEND: noninteractive

---
kind: pipeline
type: kubernetes
name: playwright-tests

trigger:
  branch:
    - main
  event:
    exclude:
      - tag
    include:
      - pull_request
steps:
  - name: e2e-tests
    image: ubuntu:focal
    commands:
    - apt-get -y update
    - apt-get -y install --no-install-recommends ca-certificates curl libappindicator1 fonts-liberation libnss3-dev wget
    - curl -sL https://deb.nodesource.com/setup_16.x | bash -
    - apt-get -y install --no-install-recommends nodejs
    - npm install --global yarn
    - wget -q https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
    - apt-get install -y ./google-chrome-stable_current_amd64.deb
    - yarn install --frozen-lockfile
    - ./node_modules/.bin/playwright install
    - yarn build:mocked
    - npx @percy/cli exec:start -v
    - yarn test:e2e
    - npx @percy/cli exec:stop -v
    resources:
      limits:
        memory: 18Gi
    environment:
      ACCOUNT_PORTAL_URL: https://account-qa.mongodb.com
      APP_ENV: staging
      HOST_URL: mongodbcom-cdn.staging.corp.mongodb.com
      NEXTAUTH_URL: http://localhost:3000/developer/api/auth/
      NEXTAUTH_SECRET:
        from_secret: NEXTAUTH_SECRET
      NPM_AUTH:
        from_secret: NPM_AUTH
      NPM_EMAIL:
        from_secret: NPM_EMAIL
      REALM_API_URL:
        from_secret: REALM_API_URL
      REALM_SEARCH_URL:
        from_secret: REALM_SEARCH_URL_STAGING
      STRAPI_URL:
        from_secret: STRAPI_URL_STAGING
      STRAPI_API_TOKEN:
        from_secret: STRAPI_API_TOKEN
      CS_BRANCH:
        from_secret: CS_BRANCH
      CS_DELIVERY_TOKEN:
        from_secret: CS_DELIVERY_TOKEN
      CS_GRAPHQL_URL:
        from_secret: CS_GRAPHQL_URL
      SENTRY_AUTH_TOKEN:
        from_secret: SENTRY_AUTH_TOKEN
      SENTRY_DSN:
        from_secret: SENTRY_DSN
      NEXT_IMAGE_HOSTS:
        from_secret: NEXT_IMAGE_HOSTS
      MONGODB_TV_API_KEY:
        from_secret: MONGODB_TV_API_KEY
      PERCY_TOKEN:
        from_secret: PERCY_TOKEN
      DEBIAN_FRONTEND: noninteractive

---
depends_on: null
kind: pipeline
type: kubernetes
name: build-devcenter-staging

resources:
  requests:
    cpu: 2000
    memory: 18Gi

steps:
  - name: build
    image: node:16.16.0-slim
    commands:
    - apt-get -y update
    - apt-get -y install --no-install-recommends ca-certificates
    - yarn install --frozen-lockfile
    - yarn build
    resources:
      limits:
        memory: 18Gi
    environment:
      ACCOUNT_PORTAL_URL: https://account-qa.mongodb.com
      APP_ENV: staging
      HOST_URL: mongodbcom-cdn.staging.corp.mongodb.com
      NPM_AUTH:
        from_secret: NPM_AUTH
      NPM_EMAIL:
        from_secret: NPM_EMAIL
      REALM_API_URL:
        from_secret: REALM_API_URL
      REALM_SEARCH_URL:
        from_secret: REALM_SEARCH_URL_STAGING
      CS_BRANCH:
        from_secret: CS_BRANCH
      CS_DELIVERY_TOKEN:
        from_secret: CS_DELIVERY_TOKEN
      CS_GRAPHQL_URL:
        from_secret: CS_GRAPHQL_URL
      SENTRY_AUTH_TOKEN:
        from_secret: SENTRY_AUTH_TOKEN
      SENTRY_DSN:
        from_secret: SENTRY_DSN
      NEXT_IMAGE_HOSTS:
        from_secret: NEXT_IMAGE_HOSTS
      MONGODB_TV_API_KEY:
        from_secret: MONGODB_TV_API_KEY
      DEBIAN_FRONTEND: noninteractive

  - name: publish-staging
    image: plugins/kaniko-ecr
    settings:
      create_repository: true
      enable_cache: true
      registry: 795250896452.dkr.ecr.us-east-1.amazonaws.com
      repo: devrel/${DRONE_REPO_NAME}
      tags:
        - devcenter-staging-build-${DRONE_BUILD_NUMBER}
        - latest-staging
      build_args:
      - APP_RELEASE=${DRONE_COMMIT_SHA}
      access_key:
        from_secret: ecr_access_key
      secret_key:
        from_secret: ecr_secret_key
      values_files: ["environments/staging.yaml"]

  - name: deploy-staging
    image: drone/cli:1.4.0-alpine
    commands:
    - drone build promote mongodb/devcenter ${DRONE_BUILD_NUMBER} staging
    environment:
      DRONE_SERVER: ${DRONE_SYSTEM_PROTO}://${DRONE_SYSTEM_HOST}
      DRONE_TOKEN:
        from_secret: drone_token

trigger:
  branch:
    - main
  event:
    - push

---
depends_on: null
kind: pipeline
type: kubernetes
name: deploy-devcenter-staging

steps:
  - name: deploy-staging
    image: quay.io/mongodb/drone-helm:v3
    settings:
      chart: mongodb/web-app
      chart_version: 4.12.3
      add_repos: [mongodb=https://10gen.github.io/helm-charts]
      namespace: devrel
      release: devcenter-frontend
      values: image.tag=devcenter-staging-build-${DRONE_BUILD_PARENT},image.pullPolicy=Always,image.repository=795250896452.dkr.ecr.us-east-1.amazonaws.com/devrel/${DRONE_REPO_NAME}
      api_server: https://api.staging.corp.mongodb.com
      kubernetes_token:
        from_secret: staging_kubernetes_token
      values_files: ["environments/staging.yaml"]

trigger:
  event:
    - promote
    - rollback
  target:
    - staging

---
depends_on: null
kind: pipeline
type: kubernetes
name: build-devcenter-prod

resources:
  requests:
    cpu: 2000
    memory: 18Gi

steps:
  - name: build-production
    image: node:16.16.0-slim
    commands:
    - apt-get -y update
    - apt-get -y install --no-install-recommends ca-certificates
    - yarn install --frozen-lockfile --verbose
    - yarn build
    resources:
      limits:
        memory: 18Gi
    environment:
      ACCOUNT_PORTAL_URL: https://account.mongodb.com
      APP_ENV: production
      HOST_URL: www.mongodb.com
      NPM_AUTH:
        from_secret: NPM_AUTH
      NPM_EMAIL:
        from_secret: NPM_EMAIL
      REALM_API_URL:
        from_secret: REALM_API_URL
      REALM_SEARCH_URL:
        from_secret: REALM_SEARCH_URL
      CS_BRANCH:
        from_secret: CS_BRANCH
      CS_DELIVERY_TOKEN:
        from_secret: CS_DELIVERY_TOKEN
      CS_GRAPHQL_URL:
        from_secret: CS_GRAPHQL_URL
      SENTRY_AUTH_TOKEN:
        from_secret: SENTRY_AUTH_TOKEN
      SENTRY_DSN:
        from_secret: SENTRY_DSN
      NEXT_IMAGE_HOSTS:
        from_secret: NEXT_IMAGE_HOSTS
      MONGODB_TV_API_KEY:
        from_secret: MONGODB_TV_API_KEY
      DEBIAN_FRONTEND: noninteractive

  - name: publish-production
    image: plugins/kaniko-ecr
    settings:
      create_repository: true
      enable_cache: true
      registry: 795250896452.dkr.ecr.us-east-1.amazonaws.com
      repo: devrel/${DRONE_REPO_NAME}
      tags:
        - devcenter-prod-build-${DRONE_BUILD_NUMBER}
        - latest-prod
      build_args:
      - APP_RELEASE=${DRONE_COMMIT_SHA}
      access_key:
        from_secret: ecr_access_key
      secret_key:
        from_secret: ecr_secret_key
      values_files: ["environments/prod.yaml"]

trigger:
  branch:
    - production
  event:
    - push

---
depends_on: null
kind: pipeline
type: kubernetes
name: deploy-devcenter-prod

steps:
  - name: deploy-prod
    image: quay.io/mongodb/drone-helm:v3
    settings:
      chart: mongodb/web-app
      chart_version: 4.12.3
      add_repos: [mongodb=https://10gen.github.io/helm-charts]
      namespace: devrel
      release: devcenter-frontend
      values: image.tag=devcenter-prod-build-${DRONE_BUILD_PARENT},image.pullPolicy=Always,image.repository=795250896452.dkr.ecr.us-east-1.amazonaws.com/devrel/${DRONE_REPO_NAME},ingress.enabled=true,ingress.hosts[0]=devcenter-frontend.devrel.prod.corp.mongodb.com
      api_server: https://api.prod.corp.mongodb.com
      kubernetes_token:
        from_secret: prod_kubernetes_token
      values_files: ["environments/prod.yaml"]

trigger:
  event:
    - promote
    - rollback
  target:
    - production

---
depends_on: null
kind: pipeline
type: kubernetes
name: rebuild-devcenter-staging-cron # Used to rebuild content published by DevRel, using what's currently deployed in the main branch.


resources:
  requests:
    cpu: 2000
    memory: 18Gi

steps:
  - name: build-staging-from-cron
    image: node:16.16.0-slim
    commands:
    - apt-get -y update
    - apt-get -y install --no-install-recommends ca-certificates
    - yarn install --frozen-lockfile
    - yarn build
    resources:
      limits:
        memory: 18Gi
    environment:
      ACCOUNT_PORTAL_URL: https://account-qa.mongodb.com
      APP_ENV: staging
      HOST_URL: mongodbcom-cdn.staging.corp.mongodb.com
      NPM_AUTH:
        from_secret: NPM_AUTH
      NPM_EMAIL:
        from_secret: NPM_EMAIL
      REALM_API_URL:
        from_secret: REALM_API_URL
      REALM_SEARCH_URL:
        from_secret: REALM_SEARCH_URL_STAGING
      CS_BRANCH:
        from_secret: CS_BRANCH
      CS_DELIVERY_TOKEN:
        from_secret: CS_DELIVERY_TOKEN
      CS_GRAPHQL_URL:
        from_secret: CS_GRAPHQL_URL
      SENTRY_AUTH_TOKEN:
        from_secret: SENTRY_AUTH_TOKEN
      SENTRY_DSN:
        from_secret: SENTRY_DSN
      NEXT_IMAGE_HOSTS:
        from_secret: NEXT_IMAGE_HOSTS
      MONGODB_TV_API_KEY:
        from_secret: MONGODB_TV_API_KEY
      DEBIAN_FRONTEND: noninteractive

  - name: publish-staging-from-cron
    image: plugins/kaniko-ecr
    settings:
      create_repository: true
      registry: 795250896452.dkr.ecr.us-east-1.amazonaws.com
      repo: devrel/${DRONE_REPO_NAME}
      tags:
        - devcenter-staging-build-${DRONE_BUILD_NUMBER}
        - latest-staging
      build_args:
      - APP_RELEASE=${DRONE_COMMIT_SHA}
      access_key:
        from_secret: ecr_access_key
      secret_key:
        from_secret: ecr_secret_key
      values_files: ["environments/staging.yaml"]

  - name: deploy-staging-from-cron
    image: drone/cli:1.4.0-alpine
    commands:
    - drone build promote mongodb/devcenter ${DRONE_BUILD_NUMBER} staging
    environment:
      DRONE_SERVER: ${DRONE_SYSTEM_PROTO}://${DRONE_SYSTEM_HOST}
      DRONE_TOKEN:
        from_secret: drone_token

trigger:
  event:
    - cron
  cron:
    - rebuild-devcenter-staging-cron

---
depends_on: null
kind: pipeline
type: kubernetes
name: rebuild-devcenter-prod-cron-new # Used to rebuild content published by DevRel, using what's currently deployed in the production branch.

resources:
  requests:
    cpu: 2000
    memory: 18Gi

steps:
  - name: build-production
    image: node:16.16.0-slim
    commands:
    - apt-get -y update
    - apt-get -y install --no-install-recommends ca-certificates
    - yarn install --frozen-lockfile --verbose
    - yarn build
    resources:
      limits:
        memory: 18Gi
    environment:
      ACCOUNT_PORTAL_URL: https://account.mongodb.com
      APP_ENV: production
      HOST_URL: www.mongodb.com
      NPM_AUTH:
        from_secret: NPM_AUTH
      NPM_EMAIL:
        from_secret: NPM_EMAIL
      REALM_API_URL:
        from_secret: REALM_API_URL
      REALM_SEARCH_URL:
        from_secret: REALM_SEARCH_URL
      CS_BRANCH:
        from_secret: CS_BRANCH
      CS_DELIVERY_TOKEN:
        from_secret: CS_DELIVERY_TOKEN
      CS_GRAPHQL_URL:
        from_secret: CS_GRAPHQL_URL
      SENTRY_AUTH_TOKEN:
        from_secret: SENTRY_AUTH_TOKEN
      SENTRY_DSN:
        from_secret: SENTRY_DSN
      NEXT_IMAGE_HOSTS:
        from_secret: NEXT_IMAGE_HOSTS
      MONGODB_TV_API_KEY:
        from_secret: MONGODB_TV_API_KEY
      DEBIAN_FRONTEND: noninteractive

  - name: publish-prod-from-cron
    image: plugins/kaniko-ecr
    settings:
      create_repository: true
      registry: 795250896452.dkr.ecr.us-east-1.amazonaws.com
      repo: devrel/${DRONE_REPO_NAME}
      tags:
        - devcenter-prod-build-${DRONE_BUILD_NUMBER}
        - latest-prod
      build_args:
      - APP_RELEASE=${DRONE_COMMIT_SHA}
      access_key:
        from_secret: ecr_access_key
      secret_key:
        from_secret: ecr_secret_key
      values_files: ["environments/prod.yaml"]

  - name: deploy-prod-from-cron
    image: drone/cli:1.4.0-alpine
    commands:
    - drone build promote mongodb/devcenter ${DRONE_BUILD_NUMBER} production
    environment:
      DRONE_SERVER: ${DRONE_SYSTEM_PROTO}://${DRONE_SYSTEM_HOST}
      DRONE_TOKEN:
        from_secret: drone_token

trigger:
  event:
    - cron
  cron:
    - rebuild-devcenter-prod-cron-new

---
depends_on: null
kind: pipeline
type: kubernetes
name: build-preview

steps:
  - name: build-preview # The ${number} var comes from the webhook query parameters.
    image: node:16.16.0-slim
    commands:
    - apt-get -y update
    - apt-get -y install --no-install-recommends ca-certificates
    - yarn install --frozen-lockfile
    - yarn build
    environment:
      APP_ENV: dev
      APP_RELEASE: ${DRONE_COMMIT_SHA}
      HOST_URL: devcenter-frontend-preview-${number}.devrel.staging.corp.mongodb.com
      NPM_AUTH:
        from_secret: NPM_AUTH
      NPM_EMAIL:
        from_secret: NPM_EMAIL
      REALM_API_URL:
        from_secret: REALM_API_URL
      REALM_SEARCH_URL:
        from_secret: REALM_SEARCH_URL_STAGING
      CS_BRANCH:
        from_secret: CS_BRANCH
      CS_DELIVERY_TOKEN:
        from_secret: CS_DELIVERY_TOKEN
      CS_GRAPHQL_URL:
        from_secret: CS_GRAPHQL_URL
      SENTRY_AUTH_TOKEN:
        from_secret: SENTRY_AUTH_TOKEN
      SENTRY_DSN:
        from_secret: SENTRY_DSN
      NEXT_IMAGE_HOSTS:
        from_secret: NEXT_IMAGE_HOSTS
      MONGODB_TV_API_KEY:
        from_secret: MONGODB_TV_API_KEY
      DEBIAN_FRONTEND: noninteractive

  - name: publish-preview
    image: plugins/kaniko-ecr
    settings:
      create_repository: true
      enable_cache: true
      registry: 795250896452.dkr.ecr.us-east-1.amazonaws.com
      repo: devrel/${DRONE_REPO_NAME}
      tags:
        - devcenter-frontend-preview-build-${number}
      access_key:
        from_secret: ecr_access_key
      secret_key:
        from_secret: ecr_secret_key

  - name: deploy-preview
    image: quay.io/mongodb/drone-helm:v3
    settings:
      mode: upgrade # Not sure why we have to set this only here, but we do.
      chart: mongodb/web-app
      chart_version: 4.12.3
      add_repos: [mongodb=https://10gen.github.io/helm-charts]
      namespace: devrel
      release: devcenter-frontend-preview-${number}
      values: >-
        image.tag=devcenter-frontend-preview-build-${number},
        image.pullPolicy=Always,
        image.repository=795250896452.dkr.ecr.us-east-1.amazonaws.com/devrel/${DRONE_REPO_NAME},
        ingress.enabled=true,
        ingress.hosts[0]=devcenter-frontend-preview-${number}.devrel.staging.corp.mongodb.com
        env.HOST_URL=devcenter-frontend-preview-${number}.devrel.staging.corp.mongodb.com
        env.NEXTAUTH_URL=https://devcenter-frontend-preview-${number}.devrel.staging.corp.mongodb.com/developer/api/auth/
      api_server: https://api.staging.corp.mongodb.com
      kubernetes_token:
        from_secret: staging_kubernetes_token
      values_files: ["environments/preview.yaml"]

trigger:
  event:
    - custom

---
depends_on: null
kind: pipeline
type: kubernetes
name: clean-up-preview

clone:
  disable: true

steps:
  - name: uninstall-preview
    image: quay.io/mongodb/drone-helm:v3
    settings:
      mode: uninstall
      namespace: devrel
      release: devcenter-frontend-preview-${number}
      api_server: https://api.staging.corp.mongodb.com
      kubernetes_token:
        from_secret: staging_kubernetes_token
  

trigger:
  event:
    - promote
  target:
    - preview-graveyard