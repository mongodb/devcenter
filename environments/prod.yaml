service:
  type: ClusterIP
  targetPort: 3000

env:
  ACCOUNT_PORTAL_URL: https://account.mongodb.com
  APP_ENV: production
  HOST_URL: www.mongodb.com
  NEXTAUTH_URL: https://www.mongodb.com/developer/api/auth/

envSecrets:
  DRONE_TOKEN: devcenter-secrets # Only production needs to have this (it's for the preview webhook).
  NEXTAUTH_SECRET: devcenter-secrets
  NPM_EMAIL: devcenter-secrets
  NPM_AUTH: devcenter-secrets
  OKTA_ISSUER: devcenter-secrets
  OKTA_CLIENT_ID: devcenter-secrets
  OKTA_CLIENT_SECRET: devcenter-secrets
  PREVIEW_SECRET_KEY: devcenter-secrets
  PREVIEW_WEBHOOK_TOKEN: devcenter-secrets # Only production needs to have this.
  PROMETHEUS_AUTH_USER: devcenter-secrets
  PROMETHEUS_AUTH_PASS: devcenter-secrets
  REALM_API_URL: devcenter-secrets
  BACKEND_URL: devcenter-secrets
  REALM_SEARCH_URL: devcenter-secrets
  REVALIDATE_TOKEN: devcenter-secrets
  SENTRY_AUTH_TOKEN: devcenter-secrets
  SENTRY_DSN: devcenter-secrets
  STRAPI_URL: devcenter-secrets
  STRAPI_API_TOKEN: devcenter-secrets
  CS_BRANCH: devcenter-secrets
  CS_DELIVERY_TOKEN: devcenter-secrets
  CS_GRAPHQL_URL: devcenter-secrets
  CS_DELIVERY_TOKEN_STAGING: devcenter-secrets
  GOOGLE_PLACES_API_KEY: devcenter-secrets
  BACKEND_API_KEY: devcenter-secrets

autoscaling:
  minReplicas: 4
  maxReplicas: 12
  metrics:
    - type: Resource
      resource:
        name: cpu
        targetAverageUtilization: 80

probes:
  enabled: true
  path: /developer/api/health/
  headers: {}
  liveness:
    httpGet: true
    initialDelaySeconds: 10
    periodSeconds: 60
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 3

resources:
  requests:
    cpu: 2
    memory: 6Gi

metrics:
  enabled: true
  interval: 30s
  path: /developer/api/metrics/
  basicAuth:
    username:
      key: PROMETHEUS_AUTH_USER
      name: devcenter-secrets
    password:
      key: PROMETHEUS_AUTH_PASS
      name: devcenter-secrets

prometheusRules:
  - alert: ServiceDown
    expr: sum(up{namespace="devrel", job=~"devcenter-frontend-web-app"}) == 0
    for: 2m
    labels:
      email_to: devhubplatform@mongodb.com
      severity: critical
    annotations:
      summary: "Service is down"
      description: "All instances of job {{ $labels.job }} are down"
  - alert: PodContainerNotReady
    expr: kube_pod_container_status_ready{namespace="devrel", container=~"devcenter-frontend"} == 0
    for: 5m
    labels:
      email_to: devhubplatform@mongodb.com
      severity: critical
    annotations:
      summary: "Container readiness check failed"
      description: "{{ $labels.instance }} of job {{ $labels.job }} container has not been ready for 5 minutes"