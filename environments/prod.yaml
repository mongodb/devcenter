service:
  type: ClusterIP
  targetPort: 3000

env:
  HOST_URL: www.mongodb.com

envSecrets:
  NPM_EMAIL: devcenter-secrets
  NPM_AUTH: devcenter-secrets
  REALM_API_URL: devcenter-secrets
  REALM_SEARCH_URL: devcenter-secrets
  STRAPI_URL: devcenter-secrets
  DEVHUB_URL: devcenter-secrets
  PREVIEW_SECRET_KEY: devcenter-secrets

autoscaling:
  minReplicas: 2
  maxReplicas: 4
  metrics:
    - type: Resource
      resource:
        name: cpu
        targetAverageUtilization: 80

probes:
  enabled: true
  path: /developer/api/health/
  headers: {}
  liveness:
    httpGet: true
    initialDelaySeconds: 10
    periodSeconds: 60
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 3

resources:
  limits:
    cpu: 2
    memory: 6Gi
  requests:
    cpu: 2
    memory: 6Gi

metrics:
  enabled: true
  interval: 30s
  path: /developer/api/metrics

# prometheusRules:
#   - alert: ServiceDown
#     expr: sum(up{namespace="devrel", job=~"devcenter-frontend-web-app-.*"}) == 0
#     for: 0m
#     labels:
#       email_to: ajhenri@mongodb.com
#       severity: critical
#     annotations:
#       summary: "Service is down"
#       description: "All instances of job {{ $labels.job }} are down"
#   - alert: PodContainerNotReady
#     expr: kube_pod_container_status_ready{namespace="devrel", container=~"devcenter-frontend-.*"} == 0
#     for: 5m
#     labels:
#       email_to: ajhenri@mongodb.com
#       severity: critical
#     annotations:
#       summary: "Container readiness check failed"
#       description: "{{ $labels.instance }} of job {{ $labels.job }} container has not been ready for 5 minutes"